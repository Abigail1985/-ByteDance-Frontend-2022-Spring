{"ast":null,"code":"var _jsxFileName = \"/Users/abigail/VScodeProject/\\u524D\\u7AEF/\\u524D\\u7AEF\\u4F5C\\u4E1A/lesson4-homework/todo-list-app/src/App.jsx\",\n    _ref;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar getAvatar = function getAvatar(users) {\n  return users.map(function (user) {\n    return _objectSpread(_objectSpread({}, user), {}, {\n      avatar: \"https://avatars.dicebear.com/v2/identicon/\".concat(user.name, \".svg\")\n    });\n  });\n};\n\nvar mockData = (_ref = [{\n  name: 'Thomas',\n  email: 'w.kccip@bllmfbgv.dm'\n}, {\n  name: 'Chow',\n  email: 'f.lfqljnlk@ywoefljhc.af'\n}, {\n  name: 'Bradley',\n  email: 'd.wfovsqyo@gpkcjwjgb.fr'\n}, {\n  name: 'Davis',\n  email: '\"t.kqkoj@utlkwnpwk.nu'\n}], getAvatar(_ref));\n\nfunction App() {\n  var _this = this;\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: mockData.map(function (_ref2) {\n      var name = _ref2.name,\n          avatar = _ref2.avatar,\n          email = _ref2.email;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: avatar,\n          width: 60,\n          height: 60\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, _this), \" ---\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this), \" ---\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this)]\n      }, name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/abigail/VScodeProject/前端/前端作业/lesson4-homework/todo-list-app/src/App.jsx"],"names":["getAvatar","users","map","user","avatar","name","mockData","email","App"],"mappings":";;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SACrBA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,2CACTA,IADS;AAEZC,MAAAA,MAAM,sDAA+CD,IAAI,CAACE,IAApD;AAFM;AAAA,GAAd,CADqB;AAAA,CAAvB;;AAMA,IAAMC,QAAQ,WACZ,CACE;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBE,EAAAA,KAAK,EAAE;AAAzB,CADF,EAEE;AAAEF,EAAAA,IAAI,EAAE,MAAR;AAAgBE,EAAAA,KAAK,EAAE;AAAvB,CAFF,EAGE;AAAEF,EAAAA,IAAI,EAAE,SAAR;AAAmBE,EAAAA,KAAK,EAAE;AAA1B,CAHF,EAIE;AAAEF,EAAAA,IAAI,EAAE,OAAR;AAAiBE,EAAAA,KAAK,EAAE;AAAxB,CAJF,CADY,EAMPP,SANO,OAAd;;AAQA,SAASQ,GAAT,GAAe;AAAA;;AACb,sBACE;AAAA,cACGF,QAAQ,CAACJ,GAAT,CAAa;AAAA,UAAGG,IAAH,SAAGA,IAAH;AAAA,UAASD,MAAT,SAASA,MAAT;AAAA,UAAiBG,KAAjB,SAAiBA,KAAjB;AAAA,0BACZ;AAAA,gCACE;AAAK,UAAA,GAAG,EAAEH,MAAV;AAAkB,UAAA,KAAK,EAAE,EAAzB;AAA6B,UAAA,MAAM,EAAE;AAArC;AAAA;AAAA;AAAA;AAAA,iBADF,uBAEE;AAAA,oBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,iBAFF,uBAGE;AAAA,oBAAOE;AAAP;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA,SAASF,IAAT;AAAA;AAAA;AAAA;AAAA,eADY;AAAA,KAAb;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;KAZQG,G;AAcT,eAAeA,GAAf","sourcesContent":["const getAvatar = users =>\n  users.map(user => ({\n    ...user,\n    avatar: `https://avatars.dicebear.com/v2/identicon/${user.name}.svg`,\n  }));\n\nconst mockData =\n  [\n    { name: 'Thomas', email: 'w.kccip@bllmfbgv.dm' },\n    { name: 'Chow', email: 'f.lfqljnlk@ywoefljhc.af' },\n    { name: 'Bradley', email: 'd.wfovsqyo@gpkcjwjgb.fr' },\n    { name: 'Davis', email: '\"t.kqkoj@utlkwnpwk.nu' },\n  ] |> getAvatar;\n\nfunction App() {\n  return (\n    <ul>\n      {mockData.map(({ name, avatar, email }) => (\n        <li key={name}>\n          <img src={avatar} width={60} height={60} /> ---\n          <span>{name}</span> ---\n          <span>{email}</span>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}