{"ast":null,"code":"var _jsxFileName = \"/Users/abigail/VScodeProject/\\u524D\\u7AEF/\\u524D\\u7AEF\\u4F5C\\u4E1A/lesson4-homework/todo-list-app/src/components/TodoTextInput.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar TodoTextInput = /*#__PURE__*/function (_Component) {\n  _inherits(TodoTextInput, _Component);\n\n  var _super = _createSuper(TodoTextInput);\n\n  function TodoTextInput() {\n    var _this;\n\n    _classCallCheck(this, TodoTextInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      text: _this.props.text || ''\n    };\n\n    _this.handleSubmit = function (e) {\n      var text = e.target.value.trim();\n\n      if (e.which === 13) {\n        _this.props.onSave(text);\n\n        if (_this.props.newTodo) {\n          _this.setState({\n            text: ''\n          });\n        }\n      }\n    };\n\n    _this.handleChange = function (e) {\n      _this.setState({\n        text: e.target.value\n      });\n    };\n\n    _this.handleBlur = function (e) {\n      if (!_this.props.newTodo) {\n        _this.props.onSave(e.target.value);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoTextInput, [{\n    key: \"render\",\n    value: function render() {\n      var editing = this.props.edi.editing;\n      return /*#__PURE__*/_jsxDEV(\"input\", {\n        className: classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo\n        }),\n        type: \"text\",\n        placeholder: this.props.placeholder,\n        autoFocus: \"true\",\n        value: this.state.text,\n        onBlur: this.handleBlur,\n        onChange: this.handleChange,\n        onKeyDown: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return TodoTextInput;\n}(Component);\n\nTodoTextInput.propTypes = {\n  onSave: PropTypes.func.isRequired,\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  editing: PropTypes.bool,\n  newTodo: PropTypes.bool\n};\nexport { TodoTextInput as default };","map":{"version":3,"sources":["/Users/abigail/VScodeProject/前端/前端作业/lesson4-homework/todo-list-app/src/components/TodoTextInput.jsx"],"names":["React","Component","PropTypes","classnames","TodoTextInput","state","text","props","handleSubmit","e","target","value","trim","which","onSave","newTodo","setState","handleChange","handleBlur","editing","edi","edit","placeholder","propTypes","func","isRequired","string","bool"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;IAEqBC,a;;;;;;;;;;;;;;;UASnBC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE,MAAKC,KAAL,CAAWD,IAAX,IAAmB;AADnB,K;;UAIRE,Y,GAAe,UAAAC,CAAC,EAAI;AAClB,UAAMH,IAAI,GAAGG,CAAC,CAACC,MAAF,CAASC,KAAT,CAAeC,IAAf,EAAb;;AACA,UAAIH,CAAC,CAACI,KAAF,KAAY,EAAhB,EAAoB;AAClB,cAAKN,KAAL,CAAWO,MAAX,CAAkBR,IAAlB;;AACA,YAAI,MAAKC,KAAL,CAAWQ,OAAf,EAAwB;AACtB,gBAAKC,QAAL,CAAc;AAAEV,YAAAA,IAAI,EAAE;AAAR,WAAd;AACD;AACF;AACF,K;;UAEDW,Y,GAAe,UAAAR,CAAC,EAAI;AAClB,YAAKO,QAAL,CAAc;AAAEV,QAAAA,IAAI,EAAEG,CAAC,CAACC,MAAF,CAASC;AAAjB,OAAd;AACD,K;;UAEDO,U,GAAa,UAAAT,CAAC,EAAI;AAChB,UAAI,CAAC,MAAKF,KAAL,CAAWQ,OAAhB,EAAyB;AACvB,cAAKR,KAAL,CAAWO,MAAX,CAAkBL,CAAC,CAACC,MAAF,CAASC,KAA3B;AACD;AACF,K;;;;;;;WAED,kBAAS;AACP,UAAQQ,OAAR,GAAkB,KAAKZ,KAAL,CAAWa,GAA7B,CAAQD,OAAR;AACA,0BACE;AACE,QAAA,SAAS,EAAEhB,UAAU,CAAC;AACpBkB,UAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWY,OADG;AAEpB,sBAAY,KAAKZ,KAAL,CAAWQ;AAFH,SAAD,CADvB;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,WAAW,EAAE,KAAKR,KAAL,CAAWe,WAN1B;AAOE,QAAA,SAAS,EAAC,MAPZ;AAQE,QAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWC,IARpB;AASE,QAAA,MAAM,EAAE,KAAKY,UATf;AAUE,QAAA,QAAQ,EAAE,KAAKD,YAVjB;AAWE,QAAA,SAAS,EAAE,KAAKT;AAXlB;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;;;;EAlDwCP,S;;AAAtBG,a,CACZmB,S,GAAY;AACjBT,EAAAA,MAAM,EAAEZ,SAAS,CAACsB,IAAV,CAAeC,UADN;AAEjBnB,EAAAA,IAAI,EAAEJ,SAAS,CAACwB,MAFC;AAGjBJ,EAAAA,WAAW,EAAEpB,SAAS,CAACwB,MAHN;AAIjBP,EAAAA,OAAO,EAAEjB,SAAS,CAACyB,IAJF;AAKjBZ,EAAAA,OAAO,EAAEb,SAAS,CAACyB;AALF,C;SADAvB,a","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nexport default class TodoTextInput extends Component {\n  static propTypes = {\n    onSave: PropTypes.func.isRequired,\n    text: PropTypes.string,\n    placeholder: PropTypes.string,\n    editing: PropTypes.bool,\n    newTodo: PropTypes.bool,\n  };\n\n  state = {\n    text: this.props.text || '',\n  };\n\n  handleSubmit = e => {\n    const text = e.target.value.trim();\n    if (e.which === 13) {\n      this.props.onSave(text);\n      if (this.props.newTodo) {\n        this.setState({ text: '' });\n      }\n    }\n  };\n\n  handleChange = e => {\n    this.setState({ text: e.target.value });\n  };\n\n  handleBlur = e => {\n    if (!this.props.newTodo) {\n      this.props.onSave(e.target.value);\n    }\n  };\n\n  render() {\n    const { editing }=this.props.edi\n    return (\n      <input\n        className={classnames({\n          edit: this.props.editing,\n          'new-todo': this.props.newTodo,\n        })}\n        type=\"text\"\n        placeholder={this.props.placeholder}\n        autoFocus=\"true\"\n        value={this.state.text}\n        onBlur={this.handleBlur}\n        onChange={this.handleChange}\n        onKeyDown={this.handleSubmit}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}