import path from 'path';
import { createContext } from '@modern-js/plugin';
import address from 'address';
export const AppContext = createContext({});
export const ConfigContext = createContext({});
export const ResolvedConfigContext = createContext({});
export const useAppContext = () => AppContext.use().value;
export const useConfigContext = () => ConfigContext.use().value;
export const useResolvedConfigContext = () => ResolvedConfigContext.use().value;
export const initAppContext = (appDirectory, plugins, configFile, options) => {
  const {
    metaName = 'modern-js',
    srcDir = 'src',
    distDir = '',
    sharedDir = 'shared'
  } = options || {};
  return {
    metaName,
    appDirectory,
    configFile,
    ip: address.ip(),
    port: 0,
    packageName: require(path.resolve(appDirectory, './package.json')).name,
    srcDirectory: path.resolve(appDirectory, srcDir),
    distDirectory: distDir,
    sharedDirectory: path.resolve(appDirectory, sharedDir),
    nodeModulesDirectory: path.resolve(appDirectory, './node_modules'),
    internalDirectory: path.resolve(appDirectory, `./node_modules/.${metaName}`),
    plugins,
    htmlTemplates: {},
    serverRoutes: [],
    entrypoints: [],
    checkedEntries: [],
    existSrc: true,
    internalDirAlias: `@_${metaName.replace(/-/g, '_')}_internal`,
    internalSrcAlias: `@_${metaName.replace(/-/g, '_')}_src`
  };
};