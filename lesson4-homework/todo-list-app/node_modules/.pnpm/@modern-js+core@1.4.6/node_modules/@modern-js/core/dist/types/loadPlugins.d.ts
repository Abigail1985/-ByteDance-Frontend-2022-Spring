import { INTERNAL_PLUGINS } from '@modern-js/utils';
import type { UserConfig } from './config';
declare type Plugin = string | [string, any];
export declare type LoadedPlugin = {
  cli?: any;
  cliPkg?: string;
  server?: any;
  serverPkg?: string;
};
export declare type PluginConfigItem = {
  cli?: Plugin;
  server?: Plugin;
} | Plugin;
export declare type PluginConfig = Array<PluginConfigItem>;
export declare type TransformPlugin = (plugin: PluginConfig, resolvedConfig: UserConfig, pluginOptions?: any) => PluginConfig;
export declare function getAppPlugins(appDirectory: string, pluginConfig: PluginConfig, internalPlugins?: typeof INTERNAL_PLUGINS): PluginConfigItem[];
/**
 * Load internal plugins which in @modern-js scope and user's custom plugins.
 * @param appDirectory - Application root directory.
 * @param userConfig - Resolved user config.
 * @param options.internalPlugins - Internal plugins.
 * @param options.transformPlugin - transform plugin before using it.
 * @returns Plugin Objects has been required.
 */

export declare const loadPlugins: (appDirectory: string, userConfig: UserConfig, options?: {
  internalPlugins?: typeof INTERNAL_PLUGINS;
  transformPlugin?: TransformPlugin;
}) => LoadedPlugin[];
export {};