import type { Compiler, Configuration, MultiCompiler } from '@modern-js/types';
export declare const beforeDev: import("@modern-js/plugin").AsyncWorkflow<void, unknown>;
export declare const afterDev: import("@modern-js/plugin").AsyncWorkflow<void, unknown>;
export declare const beforeCreateCompiler: import("@modern-js/plugin").AsyncWorkflow<{
  webpackConfigs: Configuration[];
}, unknown>;
export declare const afterCreateCompiler: import("@modern-js/plugin").AsyncWorkflow<{
  compiler: Compiler | MultiCompiler | undefined;
}, unknown>;
export declare const beforePrintInstructions: import("@modern-js/plugin").AsyncWaterfall<{
  instructions: string;
}>;
export declare const beforeBuild: import("@modern-js/plugin").AsyncWorkflow<{
  webpackConfigs: Configuration[];
}, unknown>;
export declare const afterBuild: import("@modern-js/plugin").AsyncWorkflow<void, unknown>;
export declare const beforeDeploy: import("@modern-js/plugin").AsyncWorkflow<Record<string, any>, unknown>;
export declare const afterDeploy: import("@modern-js/plugin").AsyncWorkflow<Record<string, any>, unknown>;
export declare const lifecycle: () => void;