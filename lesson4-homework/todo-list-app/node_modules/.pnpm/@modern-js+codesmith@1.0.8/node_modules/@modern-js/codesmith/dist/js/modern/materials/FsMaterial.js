import path from 'path';
import glob from 'glob-promise';
import { FsResource } from "./FsResource";
export class FsMaterial {
  constructor(basePath) {
    this.basePath = void 0;
    this.basePath = basePath;
  }

  get(resourceKey) {
    return new FsResource(path.resolve(this.basePath, resourceKey), resourceKey);
  }

  async find(globStr, options) {
    const matches = await glob(globStr, {
      cwd: path.resolve(this.basePath),
      nodir: options === null || options === void 0 ? void 0 : options.nodir,
      dot: options === null || options === void 0 ? void 0 : options.dot,
      ignore: options === null || options === void 0 ? void 0 : options.ignore
    });
    return matches.reduce((pre, cur) => {
      pre[cur] = new FsResource(path.resolve(this.basePath, cur), cur);
      return pre;
    }, {});
  }

}