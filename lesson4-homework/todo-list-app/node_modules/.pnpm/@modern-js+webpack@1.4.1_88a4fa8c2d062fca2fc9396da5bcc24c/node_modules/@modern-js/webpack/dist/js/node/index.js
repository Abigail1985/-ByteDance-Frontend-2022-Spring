"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "BaseWebpackConfig", {
  enumerable: true,
  get: function () {
    return _base.BaseWebpackConfig;
  }
});
Object.defineProperty(exports, "ClientWebpackConfig", {
  enumerable: true,
  get: function () {
    return _config.ClientWebpackConfig;
  }
});
Object.defineProperty(exports, "ModernWebpackConfig", {
  enumerable: true,
  get: function () {
    return _config.ModernWebpackConfig;
  }
});
Object.defineProperty(exports, "NodeWebpackConfig", {
  enumerable: true,
  get: function () {
    return _config.NodeWebpackConfig;
  }
});
exports.getWebpackConfig = exports.WebpackConfigTarget = void 0;

var _core = require("@modern-js/core");

var _config = require("./config");

var _base = require("./config/base");

let WebpackConfigTarget;
exports.WebpackConfigTarget = WebpackConfigTarget;

(function (WebpackConfigTarget) {
  WebpackConfigTarget[WebpackConfigTarget["CLIENT"] = 0] = "CLIENT";
  WebpackConfigTarget[WebpackConfigTarget["NODE"] = 1] = "NODE";
  WebpackConfigTarget[WebpackConfigTarget["MODERN"] = 2] = "MODERN";
})(WebpackConfigTarget || (exports.WebpackConfigTarget = WebpackConfigTarget = {}));

const getWebpackConfig = target => {
  let Config = null;

  switch (target) {
    case WebpackConfigTarget.CLIENT:
      Config = _config.ClientWebpackConfig;
      break;

    case WebpackConfigTarget.MODERN:
      Config = _config.ModernWebpackConfig;
      break;

    case WebpackConfigTarget.NODE:
      Config = _config.NodeWebpackConfig;
      break;

    default:
      Config = null;
  }

  if (!Config) {
    return null;
  }
  /* eslint-disable react-hooks/rules-of-hooks */


  const appContext = (0, _core.useAppContext)();
  const options = (0, _core.useResolvedConfigContext)();
  /* eslint-enable react-hooks/rules-of-hooks */

  const config = new Config(appContext, options);
  return config.config();
};

exports.getWebpackConfig = getWebpackConfig;