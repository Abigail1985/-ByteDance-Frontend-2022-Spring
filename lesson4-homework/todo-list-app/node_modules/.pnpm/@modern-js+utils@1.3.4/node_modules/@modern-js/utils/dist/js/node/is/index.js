"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  isDepExists: true,
  isTypescript: true,
  isEmpty: true,
  isSSR: true,
  isUseSSRBundle: true,
  isFastRefresh: true
};
exports.isUseSSRBundle = exports.isTypescript = exports.isSSR = exports.isFastRefresh = exports.isEmpty = exports.isDepExists = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _nodeEnv = require("./node-env");

Object.keys(_nodeEnv).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _nodeEnv[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _nodeEnv[key];
    }
  });
});

var _platform = require("./platform");

Object.keys(_platform).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _platform[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _platform[key];
    }
  });
});

var _type = require("./type");

Object.keys(_type).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _type[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _type[key];
    }
  });
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Check if the package name is in dependencies or devDependencies.
 *
 * @param appDirectory - Project root directory.
 * @param name - Package name.
 * @returns True if the name is in dependencies or devDependencies, false otherwise.
 */
const isDepExists = (appDirectory, name) => {
  const json = require(_path.default.resolve(appDirectory, './package.json'));

  const {
    dependencies = {},
    devDependencies = {}
  } = json;
  return dependencies.hasOwnProperty(name) || devDependencies.hasOwnProperty(name);
};
/**
 * Is typescript project.
 *
 * @param root - App directory.
 * @returns Whether to use typescript.
 */


exports.isDepExists = isDepExists;

const isTypescript = root => _fs.default.existsSync(_path.default.resolve(root, './tsconfig.json'));
/**
 * Is Empty object
 *
 * @param o - Any object.
 * @returns Whether it is empty object.
 */


exports.isTypescript = isTypescript;

const isEmpty = o => Object.entries(o).length === 0 && o.constructor === Object;
/**
 * Is SSR project
 *
 * @param config - User config.
 * @returns Whether to use server side render.
 */


exports.isEmpty = isEmpty;

const isSSR = config => {
  const {
    server
  } = config;

  if (server !== null && server !== void 0 && server.ssr) {
    return true;
  }

  if (server !== null && server !== void 0 && server.ssrByEntries && !isEmpty(server.ssrByEntries)) {
    for (const name of Object.keys(server.ssrByEntries)) {
      if (server.ssrByEntries[name]) {
        return true;
      }
    }
  }

  return false;
};

exports.isSSR = isSSR;

const isUseSSRBundle = config => {
  const {
    output
  } = config;

  if (output !== null && output !== void 0 && output.ssg) {
    return true;
  }

  return isSSR(config);
};

exports.isUseSSRBundle = isUseSSRBundle;

const isFastRefresh = () => (0, _nodeEnv.isDev)() && process.env.FAST_REFRESH !== 'false';

exports.isFastRefresh = isFastRefresh;