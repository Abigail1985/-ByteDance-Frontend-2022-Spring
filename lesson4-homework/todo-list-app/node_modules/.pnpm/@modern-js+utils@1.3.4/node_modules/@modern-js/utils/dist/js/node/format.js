"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.formatProxyOptions = formatProxyOptions;
exports.formatWebpackMessages = formatWebpackMessages;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable no-param-reassign */

/* eslint-disable max-statements */

/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file at
 * https://github.com/facebook/create-react-app/blob/master/LICENSE
 */
// Modified by Chao Xu (xuchaobei)
const friendlySyntaxErrorLabel = 'Syntax error:';

function isLikelyASyntaxError(message) {
  return message.includes(friendlySyntaxErrorLabel);
} // Cleans up webpack error messages.


function formatMessage(message) {
  var _lines$;

  let lines = []; // webpack 5 stats error object

  if (typeof message === 'object') {
    message = `${message.moduleName && `${message.moduleName}\n`}${message.details || message.stack || message.message}`;
  }

  lines = message.split('\n'); // Strip webpack-added headers off errors/warnings
  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js

  lines = lines.filter(line => !/Module [A-z ]+\(from/.test(line)); // Transform parsing error into syntax error

  lines = lines.map(line => {
    const parsingError = /Line (\d+):(?:(\d+):)?\s*Parsing error: (.+)$/.exec(line);

    if (!parsingError) {
      return line;
    }

    const [, errorLine, errorColumn, errorMessage] = parsingError;
    return `${friendlySyntaxErrorLabel} ${errorMessage} (${errorLine}:${errorColumn})`;
  });
  message = lines.join('\n'); // Smoosh syntax errors (commonly found in CSS)

  message = message.replace(/SyntaxError\s+\((\d+):(\d+)\)\s*(.+?)\n/g, `${friendlySyntaxErrorLabel} $3 ($1:$2)\n`);
  lines = message.split('\n'); // Remove leading newline

  if (lines.length > 2 && lines[1].trim() === '') {
    lines.splice(1, 1);
  } // Clean up file name


  lines[0] = lines[0].replace(/^(.*) \d+:\d+-\d+$/, '$1'); // Cleans up verbose "module not found" messages for files and packages.

  if ((_lines$ = lines[1]) !== null && _lines$ !== void 0 && _lines$.startsWith('Module not found: ')) {
    lines = [lines[0], lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:').replace('[CaseSensitivePathsPlugin] ', '').replace("Cannot resolve 'file' or 'directory' ", '')];
  }

  message = lines.join('\n'); // Internal stacks are generally useless so we strip them... with the
  // exception of stacks containing `webpack:` because they're normally
  // from user code generated by webpack. For more information see
  // https://github.com/facebook/create-react-app/pull/1050

  message = message.replace(/^\s*at\s((?!webpack:).)*:\d+:\d+[\s)]*(\n|$)/gm, ''); // at ... ...:x:y

  message = message.replace(/^\s*at\s<anonymous>(\n|$)/gm, ''); // at <anonymous>

  lines = message.split('\n'); // Remove duplicated newlines

  lines = lines.filter((line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()); // Reassemble the message

  message = lines.join('\n');
  return message.trim();
}

function formatWebpackMessages(json) {
  var _json$errors, _json$warnings, _result$errors;

  const formattedErrors = (_json$errors = json.errors) === null || _json$errors === void 0 ? void 0 : _json$errors.map(formatMessage);
  const formattedWarnings = (_json$warnings = json.warnings) === null || _json$warnings === void 0 ? void 0 : _json$warnings.map(formatMessage);
  const result = {
    errors: formattedErrors || [],
    warnings: formattedWarnings || []
  };

  if ((_result$errors = result.errors) !== null && _result$errors !== void 0 && _result$errors.some(isLikelyASyntaxError)) {
    // If there are any syntax errors, show just them.
    result.errors = result.errors.filter(isLikelyASyntaxError);
  } // First error is usually it.


  if (result.errors.length > 1) {
    result.errors.length = 1;
  }

  return result;
}

/* eslint-enable max-statements */

/* eslint-enable no-param-reassign */
function formatProxyOptions(proxyOptions) {
  const formatedProxy = [];

  if (!Array.isArray(proxyOptions)) {
    if ('target' in proxyOptions) {
      formatedProxy.push(proxyOptions);
    } else {
      Array.prototype.push.apply(formatedProxy, Object.keys(proxyOptions).reduce((total, source) => {
        const option = proxyOptions[source];
        total.push(_objectSpread({
          context: source,
          changeOrigin: true,
          logLevel: 'warn'
        }, typeof option === 'string' ? {
          target: option
        } : option));
        return total;
      }, []));
    }
  } else {
    formatedProxy.push(...proxyOptions);
  }

  return formatedProxy;
}