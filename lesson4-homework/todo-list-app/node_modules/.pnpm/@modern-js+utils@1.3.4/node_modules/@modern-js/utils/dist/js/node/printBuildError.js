"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.printBuildError = printBuildError;

var _chalk = _interopRequireDefault(require("chalk"));

var _logger = require("./logger");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable eslint-comments/no-unlimited-disable */

/* eslint-disable */

/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file at
 * https://github.com/facebook/create-react-app/blob/master/LICENSE
 */
// Modified by Chao Xu (xuchaobei)
function printBuildError(err) {
  const message = err != null && err.message;
  const stack = err != null && err.stack; // Add more helpful message for Terser error

  if (stack && typeof message === 'string' && message.indexOf('from Terser') !== -1) {
    try {
      const matched = /(.+)\[(.+):(.+),(.+)\]\[.+\]/.exec(stack);

      if (!matched) {
        throw new Error('Using errors for control flow is bad.');
      }

      const problemPath = matched[2];
      const line = matched[3];
      const column = matched[4];

      _logger.logger.error(`Failed to minify the code from this file: \n\n ${_chalk.default.yellow(`\t${problemPath}:${line}${column !== '0' ? ':' + column : ''}`)}\n`);
    } catch (ignored) {
      _logger.logger.error(`Failed to minify the bundle. ${err}\n`);
    }
  } else {
    _logger.logger.error((message || err) + '\n');
  }

  _logger.logger.log();
}
/* eslint-enable */