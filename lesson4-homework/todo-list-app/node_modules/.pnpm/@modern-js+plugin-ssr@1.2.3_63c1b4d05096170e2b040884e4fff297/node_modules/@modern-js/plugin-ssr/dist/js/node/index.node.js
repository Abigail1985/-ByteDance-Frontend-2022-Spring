"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  run: true,
  useHeaders: true
};
exports.default = void 0;
Object.defineProperty(exports, "run", {
  enumerable: true,
  get: function () {
    return _hook.run;
  }
});
Object.defineProperty(exports, "useHeaders", {
  enumerable: true,
  get: function () {
    return _hook.useHeaders;
  }
});

var _path = _interopRequireDefault(require("path"));

var _runtimeCore = require("@modern-js/runtime-core");

var _prefetch = _interopRequireDefault(require("./prefetch"));

var _hook = require("./hook");

var _react = require("./react");

Object.keys(_react).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _react[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _react[key];
    }
  });
});

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const registeredApps = new WeakSet();

const plugin = () => (0, _runtimeCore.createPlugin)(() => ({
  server: async ({
    App,
    context
  }) => {
    if (!registeredApps.has(App)) {
      (0, _runtimeCore.registerPrefetch)(App, _context => (0, _prefetch.default)(App, _context));
      registeredApps.add(App);
    }

    if (typeof window === 'undefined') {
      const html = await require("./serverRender").render(context, (context === null || context === void 0 ? void 0 : context.ssrContext.distDir) || _path.default.join(process.cwd(), 'dist'), App);
      return html;
    }

    return null;
  },
  pickContext: ({
    context,
    pickedContext
  }, next) => {
    const {
      request
    } = context === null || context === void 0 ? void 0 : context.ssrContext;
    const {
      cookie,
      'user-agent': userAgent,
      referer
    } = request.headers || {};
    return next({
      context,
      pickedContext: _objectSpread(_objectSpread({}, pickedContext), {}, {
        request: _objectSpread({
          cookie,
          userAgent,
          referer
        }, request) // FIXME: error TS2322: Type '{ request: any; store: Store<any, AnyAction> & { use: UseModel; }; }' is not assignable to type 'TRuntimeContext'. Object literal may only specify known properties, and 'request' does not exist in type 'TRuntimeContext'.

      })
    });
  }
}), {
  name: '@modern-js/plugin-ssr'
});

var _default = plugin;
exports.default = _default;