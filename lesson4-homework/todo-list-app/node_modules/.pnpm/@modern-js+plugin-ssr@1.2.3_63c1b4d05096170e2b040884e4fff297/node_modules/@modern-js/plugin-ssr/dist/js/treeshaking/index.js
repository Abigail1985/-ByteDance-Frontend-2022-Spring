import _regeneratorRuntime from "@babel/runtime/regenerator";

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

// eslint-disable-next-line filenames/match-exported
import ReactDOM from 'react-dom';
import { createPlugin } from '@modern-js/runtime-core';
import { loadableReady } from '@loadable/component';
import { RenderLevel } from "./serverRender/type";
import { jsx as _jsx } from "react/jsx-runtime";

var getQuery = function getQuery() {
  return window.location.search.substring(1).split('&').reduce(function (res, item) {
    var _item$split = item.split('='),
        _item$split2 = _slicedToArray(_item$split, 2),
        key = _item$split2[0],
        value = _item$split2[1];

    res[key] = value;
    return res;
  }, {});
};

var ssr = function ssr() {
  return createPlugin(function () {
    return {
      client: function () {
        var _client = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {
          var _window, _window$_SSR_DATA;

          var App, context, rootElement, renderLevel, _prefetch, _ref2;

          return _regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  App = _ref.App, context = _ref.context, rootElement = _ref.rootElement;
                  renderLevel = (_window = window) === null || _window === void 0 ? void 0 : (_window$_SSR_DATA = _window._SSR_DATA) === null || _window$_SSR_DATA === void 0 ? void 0 : _window$_SSR_DATA.renderLevel;

                  if (!(renderLevel === RenderLevel.CLIENT_RENDER)) {
                    _context.next = 8;
                    break;
                  }

                  _context.next = 5;
                  return App === null || App === void 0 ? void 0 : (_prefetch = (_ref2 = App).prefetch) === null || _prefetch === void 0 ? void 0 : _prefetch.call(_ref2, context);

                case 5:
                  ReactDOM.render( /*#__PURE__*/_jsx(App, {
                    context: context
                  }), rootElement);
                  _context.next = 9;
                  break;

                case 8:
                  if (renderLevel === RenderLevel.SERVER_RENDER) {
                    loadableReady(function () {
                      var hydrateContext = _objectSpread(_objectSpread({}, context), {}, {
                        _hydration: true
                      });

                      ReactDOM.hydrate( /*#__PURE__*/_jsx(App, {
                        context: hydrateContext
                      }), rootElement, function () {
                        // won't cause component re-render because context's reference identity doesn't change
                        delete hydrateContext._hydration;
                      });
                    });
                  } else {
                    // unknown renderlevel or renderlevel is server prefetch.
                    ReactDOM.render( /*#__PURE__*/_jsx(App, {
                      context: context
                    }), rootElement);
                  }

                case 9:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function client(_x) {
          return _client.apply(this, arguments);
        }

        return client;
      }(),
      pickContext: function pickContext(_ref3, next) {
        var _window2, _window2$_SSR_DATA, _window2$_SSR_DATA$co;

        var context = _ref3.context,
            pickedContext = _ref3.pickedContext;
        var request = (_window2 = window) === null || _window2 === void 0 ? void 0 : (_window2$_SSR_DATA = _window2._SSR_DATA) === null || _window2$_SSR_DATA === void 0 ? void 0 : (_window2$_SSR_DATA$co = _window2$_SSR_DATA.context) === null || _window2$_SSR_DATA$co === void 0 ? void 0 : _window2$_SSR_DATA$co.request;
        return next({
          context: context,
          pickedContext: _objectSpread(_objectSpread({}, pickedContext), {}, {
            request: _objectSpread({
              params: {},
              host: location.host,
              pathname: location.pathname,
              query: getQuery(),
              headers: {},
              url: location.href,
              cookieMap: (request === null || request === void 0 ? void 0 : request.cookieMap) || {},
              cookie: (request === null || request === void 0 ? void 0 : request.headers.cookie) || document.cookie,
              referer: (request === null || request === void 0 ? void 0 : request.referer) || document.referrer,
              userAgent: (request === null || request === void 0 ? void 0 : request.headers['user-agent']) || navigator.userAgent
            }, request)
          })
        });
      }
    };
  }, {
    name: '@modern-js/plugin-ssr'
  });
};

export default ssr;
export * from "./react";