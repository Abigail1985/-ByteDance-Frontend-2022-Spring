import type { Entrypoint, ServerRoute, Route, HtmlPartials } from '@modern-js/types';
import type { ImportStatement } from './generateCode';
import type { RuntimePlugin } from './templates';
export declare const modifyEntryImports: import("@modern-js/core").AsyncWaterfall<{
  imports: ImportStatement[];
  entrypoint: Entrypoint;
}>;
export declare const modifyEntryExport: import("@modern-js/core").AsyncWaterfall<{
  entrypoint: Entrypoint;
  exportStatement: string;
}>;
export declare const addRuntimeExports: import("@modern-js/core").AsyncWaterfall<void>;
export declare const modifyEntryRuntimePlugins: import("@modern-js/core").AsyncWaterfall<{
  entrypoint: Entrypoint;
  plugins: RuntimePlugin[];
}>;
export declare const modifyEntryRenderFunction: import("@modern-js/core").AsyncWaterfall<{
  entrypoint: Entrypoint;
  code: string;
}>;
export declare const modifyFileSystemRoutes: import("@modern-js/core").AsyncWaterfall<{
  entrypoint: Entrypoint;
  routes: Route[];
}>;
export declare const modifyServerRoutes: import("@modern-js/core").AsyncWaterfall<{
  routes: ServerRoute[];
}>;
export declare const htmlPartials: import("@modern-js/core").AsyncWaterfall<{
  entrypoint: Entrypoint;
  partials: HtmlPartials;
}>;
export declare const beforeGenerateRoutes: import("@modern-js/core").AsyncWaterfall<{
  entrypoint: Entrypoint;
  code: string;
}>;
export declare const addDefineTypes: import("@modern-js/core").AsyncWaterfall<void>;

declare const _default: import("@modern-js/core").AsyncPlugin<Partial<import("@modern-js/core").Progresses2Threads<{
  config: import("@modern-js/core").ParallelWorkflow<void, unknown>;
  resolvedConfig: import("@modern-js/core").AsyncWaterfall<{
    resolved: import("@modern-js/core").NormalizedConfig;
  }>;
  validateSchema: import("@modern-js/core").ParallelWorkflow<void, unknown>;
  prepare: import("@modern-js/core").AsyncWorkflow<void, void>;
  commands: import("@modern-js/core").AsyncWorkflow<{
    program: import("commander").Command;
  }, void>;
  watchFiles: import("@modern-js/core").ParallelWorkflow<void, unknown>;
  fileChange: import("@modern-js/core").AsyncWorkflow<{
    filename: string;
    eventType: "add" | "unlink" | "change";
  }, void>;
  beforeExit: import("@modern-js/core").AsyncWorkflow<void, void>;
  beforeRestart: import("@modern-js/core").AsyncWorkflow<void, void>;
} & import("@modern-js/core").ClearDraftProgress<import("@modern-js/core").Hooks>>>>;

export default _default;