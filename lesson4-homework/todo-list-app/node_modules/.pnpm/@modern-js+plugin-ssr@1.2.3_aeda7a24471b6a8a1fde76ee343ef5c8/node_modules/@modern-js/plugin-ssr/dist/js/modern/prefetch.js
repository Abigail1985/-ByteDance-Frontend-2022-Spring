import { renderToStaticMarkup } from 'react-dom/server';
import { run } from "./hook"; // todo: SSRContext

import { jsx as _jsx } from "react/jsx-runtime";

const prefetch = async (App, context) => run(context.ssrContext.request.headers, async () => {
  var _context$store;

  renderToStaticMarkup( /*#__PURE__*/_jsx(App, {
    context: context
  }));

  if (!context.loaderManager.hasPendingLoaders()) {
    return {
      i18nData: context.__i18nData__
    };
  }

  const loadersData = await context.loaderManager.awaitPendingLoaders();
  return {
    loadersData,
    i18nData: context.__i18nData__,
    // todo: move to plugin state
    storeState: context === null || context === void 0 ? void 0 : (_context$store = context.store) === null || _context$store === void 0 ? void 0 : _context$store.getState()
  };
});

export default prefetch;